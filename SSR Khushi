in App.js:

import React from 'react';

const App = () => {
  return <div>Hello, SSR with React!</div>;
};

export default App;




in index.js:
import React from 'react';
import ReactDOM from 'react-dom';
import App from './App';

ReactDOM.hydrate(
  <App />,
  document.getElementById('root')
);

run cmd: npm install @babel/core @babel/node @babel/preset-env @babel/preset-react --save-dev

server.js
require('@babel/register')({
  presets: ['@babel/preset-env', '@babel/preset-react'],
});
const express = require('express');
const React = require('react');
const { renderToString } = require('react-dom/server');
const { Provider } = require('react-redux');
const App = require('./src/App').default;

const app = express();
app.use(express.static('public'));

app.get('*', (req, res) => {
  const content = renderToString(<App />);
  const html = `
    <!DOCTYPE html>
    <html>
      <head>
        <title>SSR with React</title>
      </head>
      <body>
        <div id="root">${content}</div>
        <script src="/bundle.js"></script>
      </body>
    </html>
  `;
  res.send(html);
});

app.listen(3000, () => {
  console.log('Server is running on http://localhost:3000');
});
in server.js: 
require('@babel/register')({
  presets: ['@babel/preset-env', '@babel/preset-react'],
});

const express = require('express');
const React = require('react');
const { renderToString } = require('react-dom/server');
const { Provider } = require('react-redux');
const App = require('./src/App').default;

const app = express();
app.use(express.static('public'));

app.get('*', (req, res) => {
  const content = renderToString(<App />);
  const html = `
    <!DOCTYPE html>
    <html>
      <head>
        <title>SSR with React</title>
      </head>
      <body>
        <div id="root">${content}</div>
        <script src="/bundle.js"></script>
      </body>
    </html>
  `;
  res.send(html);
});

app.listen(3000, () => {
  console.log('Server is running on http://localhost:3000');
});
